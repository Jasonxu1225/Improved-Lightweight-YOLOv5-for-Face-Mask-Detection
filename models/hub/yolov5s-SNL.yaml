# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 3  # number of classes
depth_multiple: 0.33  # model depth multiple 控制模型深度（BottleneckCSP数）
#表示BottleneckCSP模块的缩放因子，所有BottleneckCSP模块中的Bottleneck乘该参数得到最终个数
width_multiple: 0.50  # layer channel multiple 控制模型宽度（卷积核数量）
#表示卷积通道的缩放银子，就是将配置里的backbone和head部分有关Conv通道数的设置，都乘以该参数
anchors:
  - [10,13, 16,30, 33,23]  # P3/8 8倍下采样
  - [30,61, 62,45, 59,119]  # P4/16 16倍下采样
  - [116,90, 156,198, 373,326]  # P5/32 32倍下采样
#下采样倍数越大，感受野越大，所以anchor越大
# YOLOv5 v6.0 backbone，包括focus，bottleneckCSP，SPP
backbone:
  # [from, number, module, args]
  #from：当前模块输入来自哪一层输出，-1表示上一层
  #number：本模块重复次数，1表示一次，3表示重复三次
  #3×640×640
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2  32×320×320
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4 64×160×160
   #128表示128个卷积核，3表示卷积核大小为3×3，2表示stride=2，其中卷积核数量别忘了乘width系数
   [-1, 3, C3, [128]], #重复3次C3，其实好像就是BottleneckCSP，但是别忘了乘depth系数
   [-1, 1, SNLStage, [64,64]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8 128×80×80
   [-1, 6, C3, [256]],
   [-1, 1, SNLStage, [128,128]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16 256×40×40
   [-1, 9, C3, [512]],
   [-1, 1, SNLStage, [256,256]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32 512×20×20
   [-1, 3, C3, [1024]],
   [-1, 1, SPPF, [1024, 5]],  # 9 512×20×20
  ]

# YOLOv5 v6.0 head，包括PANet+Detect
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], #256×40×40
   [[-1, 9], 1, Concat, [1]],  # cat backbone P4 512×40×40
   [-1, 3, C3, [512, False]],  # 13 #256×40×40 相当于1×1卷积

   [-1, 1, Conv, [256, 1, 1]], #128×40×40
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], #128×80×80
   [[-1, 6], 1, Concat, [1]],  # cat backbone P3 256×80×80
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small) 128×80×80

   [-1, 1, Conv, [256, 3, 2]], #128×40×40
   [[-1, 17], 1, Concat, [1]],  # cat head P4 #256×40×40
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium) #256×40×40

   [-1, 1, Conv, [512, 3, 2]],  #256×20×20
   [[-1, 13], 1, Concat, [1]],  # cat head P5 512×20×20
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large) #512×20×20

   [[20, 23, 26], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
yolov5s:
  yaml:
